/*
GLOBAL STYLES

What this file is for
- Colors, fonts, layout, shared classes used by multiple components.

How to update
- Group styles with clear comments, e.g.:
  /* Habit Picker */   /* Today Panel */   /* Tower */   /* Badges */   /* Reminders */
/*- Keep good contrast and visible focus outlines (accessibility).
- Prefer class names over targeting HTML tags.

Avoid
- Deleting teammatesâ€™ styles. Add or extend instead.
*/



:root{--bg:#0b0d10;--fg:#e7ecf3;--muted:#9fb0c3;--card:#12161b;--accent:#6ae3ff}
[data-theme="light"]{--bg:#f6f7fb;--fg:#0f141a;--muted:#4c5b6a;--card:#ffffff;--accent:#0066ee}
*{box-sizing:border-box}
html,body{margin:0;height:100%}
body{background:var(--bg);color:var(--fg);font:16px/1.5 system-ui,Segoe UI,Roboto,Helvetica,Arial}
.app-header{display:flex;justify-content:space-between;align-items:center;padding:12px 16px;border-bottom:1px solid #20242b}
.container{display:grid;gap:16px;padding:16px;grid-template-columns:1fr}
@media (min-width:900px){.container{grid-template-columns:repeat(2,1fr)}}
.card{background:var(--card);border:1px solid #1e242b;border-radius:14px;padding:14px;min-height:60px}
.btn{background:transparent;border:1px solid #2b3440;color:var(--fg);padding:8px 10px;border-radius:10px;cursor:pointer}
.btn:focus{outline:3px solid var(--accent);outline-offset:2px}
/* Visible focus indicator for interactive elements /
button:focus-visible,
a:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible,
[tabindex]:not([tabindex="-1"]):focus-visible,
.habit-chip:focus-visible,
input[type="checkbox"]:focus-visible {
  / High-visibility ring that doesn't shift layout /
  outline: 3px solid #1976d2; / high-contrast blue /
  outline-offset: 2px;

  / Soft halo for rounded UIs (since outline isn't rounded) /
  box-shadow: 0 0 0 4px rgba(25, 118, 210, 0.2);
}

/ Ensure custom "chip" is keyboard-focusable somewhere in markup:
   .habit-chip { outline: none; }  <-- avoid this unless replaced.
   If .habit-chip isn't a native control, give it role="button" and tabindex="0".
*/

/* 1) Make <main class="container"> a 2-col grid and reserve row 1 for the towerView */
.container {
  display: grid;
  gap: 16px;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  /* This declares only the first row; other rows are created implicitly below it */
  grid-template-areas: "tower tower";
  grid-auto-rows: minmax(0, auto);
}

/* 2) Put the tower into that reserved row, center it, and layer it above others */
#towerView {
  grid-area: tower;       /* sits on row 1 across both columns */
  justify-self: center;   /* center the entire strip */
  align-self: start;      /* stick to top of row 1 */
  width: max-content;     /* shrink to the width of the colored boxes */
  margin: 20px 0;         /* space under header */
  position: relative;     /* needed for z-index to apply */
  z-index: 1000;          /* above other cards inside .container */
}

/* 3) (Optional) Lay out the colored boxes in a row */
#towerView .boxes { display: flex; gap: 8px; }
#towerView .box   { width: 28px; height: 28px; border-radius: 6px; }

/* 4) Responsive: keep the tower on top when collapsing to one column */
@media (max-width: 768px) {
  .container {
    grid-template-columns: 1fr;
    grid-template-areas: "tower";
  }
}
